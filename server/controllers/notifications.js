// Generated by CoffeeScript 1.6.2
var Notification;

Notification = require('../models/notification');

module.exports = {
  all: function(req, res, next) {
    var _this = this;

    return Notification.all(function(err, notifs) {
      if (err) {
        return next(err);
      } else {
        return res.send(notifs);
      }
    });
  },
  deleteAll: function(req, res, next) {
    return Notification.destroyAll(function(err) {
      if (err) {
        return next(err);
      } else {
        return res.send(204, '');
      }
    });
  },
  show: function(req, res, next) {
    var _this = this;

    return Notification.find(req.params.id, function(err, notif) {
      if (err) {
        return next(err);
      } else if (!notif) {
        return res.send(404, 'Notification not found');
      } else {
        return res.send(notif);
      }
    });
  },
  "delete": function(req, res, next) {
    var _this = this;

    return Notification.find(req.params.id, function(err, notif) {
      if (err) {
        return next(err);
      } else if (!notif) {
        return res.send(404, 'Notification not found');
      } else {
        return notif.destroy(function(err) {
          if (err) {
            return next(err);
          } else {
            return res.send(204, 'Notification deleted');
          }
        });
      }
    });
  },
  create: function(req, res, next) {
    var attributes, _ref,
      _this = this;

    attributes = req.body;
    attributes.type = 'temporary';
    if ((_ref = attributes.resource) == null) {
      attributes.resource = {
        app: attributes.app || null,
        url: attributes.url || '/'
      };
    }
    return Notification.create(attributes, function(err, notif) {
      if (err) {
        return next(err);
      } else {
        return res.send({
          success: 'Notification created'
        }, 201);
      }
    });
  },
  updateOrCreate: function(req, res, next) {
    var attributes, params, _ref,
      _this = this;

    if (!req.params.app || !req.params.ref) {
      return res.send('Wrong usage', 500);
    }
    attributes = req.body;
    attributes.type = 'persistent';
    attributes.ref = req.params.ref;
    attributes.app = req.params.app;
    if ((_ref = attributes.resource) == null) {
      attributes.resource = {
        app: attributes.app,
        url: attributes.url || '/'
      };
    }
    params = {
      key: [req.params.app, req.params.ref]
    };
    return Notification.request('byApps', params, function(err, notifs) {
      if (err) {
        return next(err);
      } else if (!notifs || notifs.length === 0) {
        return Notification.create(attributes, function(err, notif) {
          if (err) {
            return next(err);
          } else {
            return res.send(201, notif);
          }
        });
      } else {
        return notifs[0].updateAttributes(attributes, function(err, notif) {
          if (err) {
            return next(err);
          } else {
            return res.send(notif);
          }
        });
      }
    });
  },
  destroy: function(req, res, next) {
    var params,
      _this = this;

    params = {
      key: [req.params.app, req.params.ref]
    };
    return Notification.request('byApps', params, function(err, notifs) {
      if (err) {
        return next(err);
      } else if (!notifs || notifs.length === 0) {
        return res.send({
          success: 'Does not exist'
        }, 204);
      } else {
        return notifs[0].destroy(function(err) {
          if (err) {
            return next(err);
          } else {
            return res.send({
              success: 'Deleted'
            }, 204);
          }
        });
      }
    });
  }
};
