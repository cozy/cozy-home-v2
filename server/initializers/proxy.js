// Generated by CoffeeScript 1.6.2
var Application, client, haibuClient, request, resetProxy, resetRoutes, updateApps;

request = require('request-json');

Application = require('../models/application');

client = request.newClient('http://localhost:9104/');

haibuClient = request.newClient('http://localhost:9002/');

resetRoutes = function() {
  return Application.all(function(err, installedApps) {
    var appDict, installedApp, _i, _len;

    appDict = {};
    if (installedApps !== void 0) {
      for (_i = 0, _len = installedApps.length; _i < _len; _i++) {
        installedApp = installedApps[_i];
        if (installedApp.name !== "") {
          appDict[installedApp.name] = installedApp;
        } else {
          installedApp.destroy();
        }
      }
    }
    return haibuClient.get('drones/running', function(err, res, apps) {
      return updateApps(apps, appDict, resetProxy);
    });
  });
};

updateApps = function(apps, appDict, callback) {
  var app, installedApp;

  if ((apps != null) && apps.length > 0) {
    app = apps.pop();
    installedApp = appDict[app.name];
    if ((installedApp != null) && installedApp.port !== app.port) {
      return installedApp.updateAttributes({
        port: app.port
      }, function(err) {
        return updateApps(apps, appDict, callback);
      });
    } else {
      return updateApps(apps, appDict, callback);
    }
  } else {
    return callback();
  }
};

resetProxy = function() {
  return client.get('routes/reset/', function(err, res, body) {
    if ((res != null) && res.statusCode === 200) {
      return console.info('Proxy successfuly reseted.');
    } else {
      return console.info('Something went wrong while reseting proxy.');
    }
  });
};

module.exports = function() {
  return resetRoutes();
};
